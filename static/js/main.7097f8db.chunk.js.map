{"version":3,"sources":["components/Header.js","components/Card.js","components/CardEvaluationPanel.js","components/layout/FlexColumn.js","components/SetPicker.js","components/SetEvaluationPage.js","components/Average.js","components/RarityPicker.js","components/StatisticsPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","header","StyledImg","img","Blank","div","Wrapper","Card","image_uris","name","oracle_text","card_faces","useState","showBack","setShowBack","imageUri","normal","className","src","type","onClick","CardEvaluationPanel","cardData","evaluation","onChange","handleChange","e","id","currentTarget","value","checked","for","FlexColumn","Select","select","SetPicker","set","sets","setSets","useEffect","a","response","fetch","console","error","json","data","map","s","code","toUpperCase","SetEvaluationPage","setSet","cards","setCards","evaluations","setEvaluations","cachedEvaluations","localStorage","getItem","log","JSON","parse","setItem","stringify","handleSetChange","newSet","uri","filter","c","object","np","next_page","has_more","handleEvaluationChange","cardId","sort","c1","c2","parseInt","collector_number","round","number","maxDecimalPlaces","Math","Number","EPSILON","Average","numbers","values","reduce","prev","curr","length","Style","fieldset","RarityPicker","selected","setSelected","newSelection","push","includes","Layout","StatisticsPage","isLoading","setIsLoading","rarityFilter","setRarityFilter","filteredCards","rarity","r","isNaN","power","toughness","cmc","style","display","justifyContent","textAlign","BarChart","Object","acc","card","cardsToProcess","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","label","App","exact","to","padding","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7097f8db.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Header = styled.header`\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  background: rgba(0, 50, 50, 0.2);\n  color: rgba(0, 0, 0, 0.7);\n\n  & > * {\n    margin: 0 1rem;\n  }\n\n  & > a {\n    text-decoration: none;\n    color: rgba(0, 0, 0, 0.6);\n    font-weight: 600;\n\n    &.active {\n      text-decoration: underline;\n    }\n\n    &:hover {\n      color: rgba(0, 0, 0, 0.9);\n    }\n  }\n`;\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledImg = styled.img`\n  border-radius: 10px;\n  max-width: calc(2.5 * 100px);\n  max-height: calc(3.5 * 100px);\n  width: auto;\n  height: auto;\n`;\n\nconst Blank = styled.div`\n  border-radius: 10px;\n  border: 1px solid black;\n  padding: 0.5rem;\n  width: calc(2.5 * 100px);\n  height: calc(3.5 * 100px);\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Card = ({ image_uris, name, oracle_text, card_faces }) => {\n  const [showBack, setShowBack] = useState(false);\n  let imageUri = null;\n\n  if (card_faces) {\n    imageUri = card_faces[showBack ? 1 : 0].image_uris.normal;\n  } else {\n    imageUri = image_uris.normal;\n  }\n\n  return (\n    <Wrapper>\n      {imageUri ? (\n        <StyledImg className=\"Card\" src={imageUri} />\n      ) : (\n        <Blank>\n          <h4>{name}</h4>\n          <p>{oracle_text}</p>\n        </Blank>\n      )}\n\n      {card_faces ? (\n        showBack ? (\n          <button type=\"button\" onClick={() => setShowBack(false)}>\n            show front\n          </button>\n        ) : (\n          <button type=\"button\" onClick={() => setShowBack(true)}>\n            show back\n          </button>\n        )\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\n\nconst Wrapper = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-bottom: 0px;\n  padding: 1rem;\n  display: flex;\n  flex-direction: row;\n\n  & > ul {\n    list-style-type: none;\n  }\n`;\n\nconst CardEvaluationPanel = ({ cardData, evaluation, onChange }) => {\n  const handleChange = (e) => {\n    onChange(cardData.id, e.currentTarget.value);\n  };\n\n  return (\n    <Wrapper>\n      <Card {...cardData} />\n      <ul>\n        <li>\n          <input\n            type=\"radio\"\n            name={`eval-${cardData.id}`}\n            value=\"reason\"\n            checked={evaluation === \"reason\"}\n            id={`reason-${cardData.id}`}\n            onChange={handleChange}\n          />\n\n          <label for={`reason-${cardData.id}`}>Reason</label>\n        </li>\n\n        <li>\n          <input\n            type=\"radio\"\n            name={`eval-${cardData.id}`}\n            value=\"reward\"\n            checked={evaluation === \"reward\"}\n            id={`reward-${cardData.id}`}\n            onChange={handleChange}\n          />\n\n          <label for={`reward-${cardData.id}`}>Reward</label>\n        </li>\n\n        <li>\n          <input\n            type=\"radio\"\n            name={`eval-${cardData.id}`}\n            value=\"rp\"\n            checked={evaluation === \"rp\"}\n            id={`rp-${cardData.id}`}\n            onChange={handleChange}\n          />\n\n          <label for={`rp-${cardData.id}`}>Role-player</label>\n        </li>\n\n        <li>\n          <input\n            type=\"radio\"\n            name={`eval-${cardData.id}`}\n            value=\"replaceable\"\n            checked={evaluation === \"replaceable\"}\n            id={`replaceable-${cardData.id}`}\n            onChange={handleChange}\n          />\n\n          <label for={`replaceable-${cardData.id}`}>Replaceable</label>\n        </li>\n      </ul>\n    </Wrapper>\n  );\n};\n\nexport default CardEvaluationPanel;\n","import styled from \"styled-components\";\n\nconst FlexColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default FlexColumn;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Select = styled.select`\n  width: 100%;\n`;\n\nconst SetPicker = ({ set, onChange }) => {\n  const [sets, setSets] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      let response = null;\n\n      try {\n        response = await fetch(\"https://api.scryfall.com/sets\");\n      } catch (error) {\n        console.error(error);\n        return;\n      }\n\n      const data = await response.json();\n\n      setSets(data.data);\n    })();\n  }, []);\n\n  return (\n    <Select value={set} onChange={onChange}>\n      <option value=\"\">Select a set...</option>\n      {sets.map((s) => (\n        <option value={s.code}>\n          {s.name} ({s.code.toUpperCase()})\n        </option>\n      ))}\n    </Select>\n  );\n};\n\nexport default SetPicker;\n","import React, { useEffect, useState } from \"react\";\nimport CardEvaluationPanel from \"./CardEvaluationPanel\";\nimport FlexColumn from \"./layout/FlexColumn\";\nimport SetPicker from \"./SetPicker\";\n\nconst SetEvaluationPage = () => {\n  const [set, setSet] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [evaluations, setEvaluations] = useState({});\n\n  useEffect(() => {\n    const cachedEvaluations = localStorage.getItem(\"evaluations\");\n\n    if (cachedEvaluations) {\n      console.log(\"Loading evaluations from local storage...\");\n      setEvaluations(JSON.parse(cachedEvaluations));\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(evaluations);\n    localStorage.setItem(\"evaluations\", JSON.stringify(evaluations));\n  }, [evaluations]);\n\n  const handleSetChange = async (e) => {\n    const newSet = e.currentTarget.value;\n\n    if (!newSet) {\n      setCards([]);\n      setSet(\"\");\n      return;\n    }\n\n    let cardData = [];\n    let uri = `https://api.scryfall.com/cards/search?q=set:${newSet}`;\n\n    while (true) {\n      const response = await fetch(uri);\n      const data = await response.json();\n\n      console.log(data);\n\n      if (data.data) {\n        cardData = [\n          ...cardData,\n          ...data.data.filter((c) => c.object === \"card\"),\n        ];\n      }\n\n      console.log({ np: data.next_page });\n\n      if (data.has_more) {\n        uri = data.next_page;\n      } else {\n        break;\n      }\n    }\n\n    setCards(cardData);\n    setSet(newSet);\n  };\n\n  const handleEvaluationChange = (cardId, value) => {\n    setEvaluations({ ...evaluations, [cardId]: value });\n  };\n\n  return (\n    <>\n      <SetPicker set={set} onChange={handleSetChange} />\n      <FlexColumn>\n        {cards\n          .sort(\n            (c1, c2) =>\n              parseInt(c1.collector_number) - parseInt(c2.collector_number)\n          )\n          .map((c) => (\n            <CardEvaluationPanel\n              cardData={c}\n              evaluation={evaluations[c.id] || null}\n              onChange={handleEvaluationChange}\n            />\n          ))}\n      </FlexColumn>\n    </>\n  );\n};\n\nexport default SetEvaluationPage;\n","import React from \"react\";\n\nconst calculateAverage = (numbers) => {\n  const sum = numbers.reduce((prev, curr) => prev + curr, 0);\n  return sum / numbers.length;\n};\n\nconst round = (number, maxDecimalPlaces) => {\n  return (\n    Math.round((number + Number.EPSILON) * (10 ^ maxDecimalPlaces)) /\n    (10 ^ maxDecimalPlaces)\n  );\n};\n\nconst Average = ({ values = [], maxDecimalPlaces = 2 }) => {\n  return <span>{round(calculateAverage(values), maxDecimalPlaces)}</span>;\n};\n\nexport default Average;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Style = styled.fieldset`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  & > label {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst RarityPicker = ({ onChange }) => {\n  const [selected, setSelected] = useState([]);\n\n  const handleChange = (e, value) => {\n    const checked = e.currentTarget.checked;\n    let newSelection = [];\n\n    if (!value) {\n      newSelection = checked ? [\"common\", \"uncommon\", \"rare\", \"mythic\"] : [];\n    } else {\n      newSelection = selected.filter((s) => s !== value);\n\n      if (checked) {\n        newSelection.push(value);\n      }\n    }\n\n    setSelected(newSelection);\n    onChange(newSelection);\n  };\n\n  return (\n    <Style>\n      <legend>Rarity</legend>\n\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selected.length === 4}\n          onChange={(e) => handleChange(e, \"\")}\n        />\n        <span>Select all...</span>\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selected.includes(\"common\")}\n          onChange={(e) => handleChange(e, \"common\")}\n        />\n        <span>C</span>\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selected.includes(\"uncommon\")}\n          onChange={(e) => handleChange(e, \"uncommon\")}\n        />\n        <span>U</span>\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selected.includes(\"rare\")}\n          onChange={(e) => handleChange(e, \"rare\")}\n        />\n        <span>R</span>\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={selected.includes(\"mythic\")}\n          onChange={(e) => handleChange(e, \"mythic\")}\n        />\n        <span>M</span>\n      </label>\n    </Style>\n  );\n};\n\nexport default RarityPicker;\n","import React, { useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport styled from \"styled-components\";\nimport Average from \"./Average\";\nimport RarityPicker from \"./RarityPicker\";\nimport SetPicker from \"./SetPicker\";\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template: \"filters content\" / 200px auto;\n`;\n\nconst StatisticsPage = () => {\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [rarityFilter, setRarityFilter] = useState([]);\n\n  const filteredCards = cards.filter((c) =>\n    // TODO: handle double sided cards\n    rarityFilter && rarityFilter.length > 0\n      ? rarityFilter.includes(c.rarity)\n      : c\n  );\n\n  const handleSetChange = async (e) => {\n    const newSet = e.currentTarget.value;\n\n    if (!newSet) {\n      setCards([]);\n      return;\n    }\n\n    let cardData = [];\n    let uri = `https://api.scryfall.com/cards/search?q=set:${newSet}`;\n\n    setIsLoading(true);\n\n    while (true) {\n      const response = await fetch(uri);\n      const data = await response.json();\n\n      if (data.data) {\n        cardData = [\n          ...cardData,\n          ...data.data.filter((c) => c.object === \"card\"),\n        ];\n      }\n\n      if (data.has_more) {\n        uri = data.next_page;\n      } else {\n        break;\n      }\n    }\n\n    setCards(cardData);\n\n    setIsLoading(false);\n  };\n\n  return (\n    <Layout>\n      <div>\n        <SetPicker onChange={handleSetChange} />\n        <RarityPicker onChange={(r) => setRarityFilter(r)} />\n      </div>\n\n      {isLoading ? (\n        \"Loading...\"\n      ) : filteredCards.length > 0 ? (\n        <div>\n          <ul>\n            <li>\n              Average power:{\" \"}\n              <Average\n                values={filteredCards\n                  .filter((c) => !isNaN(c.power))\n                  .map((c) => +c.power)}\n              />\n            </li>\n\n            <li>\n              Average toughness:{\" \"}\n              <Average\n                values={filteredCards\n                  .filter((c) => !isNaN(c.toughness))\n                  .map((c) => +c.toughness)}\n              />\n            </li>\n\n            <li>\n              Average CMC:{\" \"}\n              <Average\n                values={filteredCards\n                  .filter((c) => !isNaN(c.cmc))\n                  .map((c) => +c.cmc)}\n              />\n            </li>\n          </ul>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              textAlign: \"center\",\n            }}\n          >\n            <div>\n              <h3>Power/Toughness breakdown</h3>\n\n              <BarChart\n                data={Object.values(\n                  filteredCards.reduce((acc, card) => {\n                    let cardsToProcess = [];\n\n                    if (card.card_faces) {\n                      cardsToProcess.push(card.card_faces);\n                    } else {\n                      cardsToProcess.push(card);\n                    }\n\n                    for (let c of cardsToProcess) {\n                      if (c.power) {\n                        if (!acc[c.power]) {\n                          acc[c.power] = {\n                            value: c.power,\n                            power: 0,\n                            toughness: 0,\n                          };\n                        }\n\n                        acc[c.power].power++;\n                      }\n\n                      if (c.toughness) {\n                        if (!acc[c.toughness]) {\n                          acc[c.toughness] = {\n                            value: c.toughness,\n                            power: 0,\n                            toughness: 0,\n                          };\n                        }\n\n                        acc[c.toughness].toughness++;\n                      }\n                    }\n\n                    return acc;\n                  }, {})\n                )}\n                width={500}\n                height={300}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <XAxis dataKey=\"value\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"power\" fill=\"#DA4167\" label={{ fill: \"white\" }} />\n                <Bar\n                  dataKey=\"toughness\"\n                  fill=\"#083D77\"\n                  label={{ fill: \"white\" }}\n                />\n              </BarChart>\n            </div>\n          </div>\n\n          {/* <pre>{JSON.stringify(filteredCards, null, 1)}</pre> */}\n        </div>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default StatisticsPage;\n","import React from \"react\";\nimport { NavLink, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport SetEvaluationPage from \"./components/SetEvaluationPage\";\nimport StatisticsPage from \"./components/StatisticsPage\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header>\n        <NavLink exact to=\"/\">Home</NavLink>\n        {/* <NavLink to=\"/evaluations\">Set Evaluations</NavLink> */}\n        <NavLink to=\"/stats\">Statistics</NavLink>\n      </Header>\n\n      <div style={{ padding: \"1rem\" }}>\n        <Switch>\n          <Route exact path=\"/\">\n            Home\n          </Route>\n          <Route path=\"/evaluations\">\n            <SetEvaluationPage />\n          </Route>\n          <Route path=\"/stats\">\n            <StatisticsPage />\n          </Route>\n          <Route path=\"/404\">404</Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}